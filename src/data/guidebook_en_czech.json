{
	"items" : {
	  "chapters" : [
		{
		  "Cover Page" : {
			"background_image" : "Robot_Steam_BG_16x9.small.jpg",
			"columns" : [
			  {
				"style" : "align-self: flex-end; font-size: 0.8em; padding-top:22em;",
				"subtitle" : "Start prototyping with the eBrain"
			  },
			  {
				"style" : "flex-grow: 2;",
				"logo" : "svg/PrimaryLogo.svg"
			  },
			  {}
			],
			"comment" : "Super Power! Warning about batteries not included",
			"type" : "title cover"
		  },
		  "inner_cover" : {
			"columns" : [
			  {
				"subtitle" : "Quick to set up and easy to use, start exploring the world of technology today!",
				"title" : "Designed for exploration",
				"message" : "Get your CAN. Get your workspace ready. The future depends on YOU!"
			  },
			  {
				"body" : "This workbook contains a series of exercises that will introduce you to the Robot in a Can!\n\nIt will help you on your way to adventuring and building robots! You can follow the suggested curriculum or skip ahead if you prefer.",
				"message" : "Please download all the software you will need for this workbook vist: http://build.robotinacan.com "
			  }
			],
			"type" : "content"
		  }
		},
		{
		  "chapter_one" : {
			"columns" : [
			  {
				"subtitle" : "What Is The Robot In A Can Kit?",
				"title" : " Chapter 1"
			  }
			],
			"type" : "title chapter_title"
		  },
		  "rapid_prototyping" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-01.svg",
				"nerd_alert" : "The eBrain is a powerful microcontroller compatible with the Arduino IDE and with tons of add ons!"
			  },
			  {
				"body" : "The Robot In A Can system is designed to make rapid prototypes to test ideas quickly.\n\n Experiment with technology, build circuits, program a microcontroller, and design projects that can solve real world problems. \n\nUse materials that are easy to find and inexpensive with out investing too much at the beginning.\n\n ",
				"subtitle" : "Test Quickly, Iterate Often",
				"title" : "A Rapid Prototyping Platform"
			  }
			],
			"type" : "content basics"
		  },
		  "whats_in_the_can" : {
			"columns" : [
			  {
				"image" : "svg/WhatsInTheCan.svg",
				"style" : "flex-grow: 2;"
			  },
			  {
				"list" : [
				  {
					"body" : "1x eBrain"
				  },
				  {
					"body" : "2x motors"
				  },
				  {
					"body" : "4x motor holders"
				  },
				  {
					"body" : "2x robot body"
				  },
				  {
					"body" : "2x chassis"
				  },
				  {
					"body" : "2x wheels"
				  },
				  {
					"body" : "30x Cables"
				  },
				  {
					"body" : "1x Battery pack"
				  },
				  {
					"body" : "1x Potentiometer"
				  },
				  {
					"body" : "2x Bulldog clip"
				  },
				  {
					"body" : "1x Distance sensor"
				  },
				  {
					"body" : "3x LED"
				  }
				],
				"title" : "What's In The Can?"
			  }
			],
			"type" : "content reference materials"
		  },
		  "electronic_brains" : {
			"columns" : [
			  {
				"image" : "applications.png"
			  },
			  {
				"body" : "Computers are a lot like electronic thinking machines. And these “brains” aren’t just for laptops, tablets and phones – they can be found in all sorts of places like airplanes, household appliances and industrial equipment.\n\n They’re all around us and help run our society! You will learn to play with this technology and control it, allowing you to use these tools to make an impact on the world around you.",
				"subtitle" : "Everything Smart Needs a brain",
				"title" : "Electronic brains"
			  }
			],
			"type" : "content basics"
		  },
		  "parts_of_the_eBrain" : {
			"columns" : [
			  {
				"image" : "svg/WhatsOnTheBoard.svg",
				"style" : "flex-grow: 2;"
			  },
			  {
				"title" : "Map of the eBrain",
				"list" : [
				  {
					"body" : "On/Off switch"
				  },
				  {
					"body" : "Servo Motor Bay"
				  },
				  {
					"body" : "Stepper Motor Bay"
				  },
				  {
					"body" : "GPIO bay"
				  },
				  {
					"body" : "USB FTDI port"
				  },
				  {
					"body" : "Patch Bay"
				  },
				  {
					"body" : "Light Sensor"
				  },
				  {
					"body" : "RGB LED"
				  },
				  {
					"body" : "Buttons"
				  },
				  {
					"body" : "Breadboard"
				  },
				  {
					"body" : "Power"
				  },
				  {
					"body" : "eBrain Core (this is where programs live)"
				  }
				]
			  }
			],
			"type" : "content reference materials"
		  },
		  "eBrain Superpower 1" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-02.svg"
			  },
			  {
				"body" : "Your eBrain is a ‘Development Board.’ That means the board can be re-purposed and used again and again for many different tasks.\n\n You don’t need to use any additional tools to build your circuits.  Your eBrain allows you to connect and build circuits using our patch cable system quickly. When you are ready, we’ll teach you how to make permanent circuits using soldering and even board design! ",
				"subtitle" : "eBrain is a good teacher",
				"title" : "eBrain Superpower #1"
			  }
			],
			"type" : "content basics"
		  },
		  "eBrain Superpower 2" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-03.svg"
			  },
			  {
				"body" : "No wires to tie you down! You can remote control your eBrain from your computer or cellphone. Because you can tell it what to do wirelessly, your robot can be in one room while you’re in another.\n\nAlthough the eBrain uses a WiFi radio to communicate, it doesn’t need the internet to function.",
				"fun_fact" : "Hollywood actress and inventor Hedy LaMarr invented the precursor to the secure WiFi, all the way back in 1940.",
				"subtitle" : "eBrain listens and talks  over wifi",
				"title" : "eBrain Superpower #2"
			  }
			],
			"type" : "content basics"
		  },
		  "eBrain Superpower 3" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-04.svg"
			  },
			  {
				"body" : "We’ll be going over how to use Snap!, our favorite drag and drop software, but you’re not limited to it. You can actually program your eBrain with other languages such as Arduino C or Python.",
				"nerd_alert" : "The first computer bugs were really an actual insects that got stuck in a vaccum tubes of computers.",
				"subtitle" : "eBrain can understand many programming languages.",
				"title" : "eBrain Superpower #3"
			  }
			],
			"type" : "content basics"
		  }
		},
		{
		  "chapter_two" : {
			"columns" : [
			  {
				"subtitle" : "Getting Started With Robot In A Can",
				"editable" : true,
				"title" : " Chapter 2"
			  }
			],
			"type" : "title chapter_title"
		  },
		  "chapter_materials" : {
			"columns" : [
			  {
				"image" : "svg/materialschapterone.svg"
			  },
			  {
				"subtitle" : "Batteries required",
				"title" : "Materials required for this chapter",
				"body" : "MATERIALS:",
				"list" : [
				  {
					"body" : "4x AA batteries"
				  },
				  {
					"body" : "1x battery pack"
				  },
				  {
					"body" : "1x eBrain"
				  },
				  {
					"body" : "4x Patch Cables"
				  },
				  {
					"body" : "1x LED"
				  }
				],
				"message" : "Keep your workspace clean and organized like a true designer."
			  }
			],
			"comment_copy" : "AA batery info should be a nerd alert",
			"type" : "content"
		  },
		  "batteries" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-05.svg"
			  },
			  {
				"body" : "MATERIALS REQUIRED:4x AA batteries, 1x battery pack, 1x eBrain",
				"list" : [
				  {
					"body" : "Insert 4x AA batteries Place the ﬂat side of the battery on the springs."
				  },
				  {
					"body" : "Connect the battery pack to the board The connector is located on the back of the board. Make sure it is the right way and snaps fully in place."
				  },
				  {
					"body" : "Turn it on. The tiny switch is on the front of the board. Slide the switch from 0 to 1 and you will see the yellow light turn on."
				  }
				],
				"subtitle" : "Batteries required",
				"title" : "Power up your eBrain"
			  }
			],
			"comment_copy" : "AA batery info should be a nerd alert",
			"type" : "content activity"
		  },
		  "Power" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-06.svg",
				"nerd_alert" : "each AA battery has 1.5V, so the power pack holds 6V total (4x AA).\n\n Your eBrain’s power connector runs at 3.3V. The power has been regulated ensuring that there are no spikes or drops in voltage, so you’ll always have power when you need it!"
			  },
			  {
				"body" : "The batteries are connected to the back of the board and extend to these two holes on the front of the board. \n\nThink of them as sides of a battery. The 3.3V is the positive side and the GND (ground) is the negative side. You can use these two holes to bring power to your projects!",
				"subtitle" : "This is your eBrain’s power supply",
				"title" : "Power"
			  }
			],
			"comment_copy" : "AA batery info should be a nerd alert",
			"type" : "content reference"
		  },
		  "patch_bay" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-08.svg"
			  },
			  {
				"body" : "We can patch the connections between our GPIO pins and the parts on our eBrain to activate them. The Patch Bay is connected to the RGB LED, the 4 Buttons, and the Light Sensor.",
				"subtitle" : "The patch bay is connected to the electronic parts on the eBrain.",
				"title" : "The Patch Bay"
			  }
			],
			"type" : "content reference"
		  },
		  "wiring" : {
			"columns" : [
			  {
				"image" : "patch.jpg"
			  },
			  {
				"body" : "The Robot In A Can system uses patch cables like in old phone systems to connect inputs and outputs of different systems together.",
				"subtitle" : "Patching parts together",
				"title" : "Wiring With The Robot In A Can"
			  }
			],
			"type" : "content basics"
		  },
		  "rgb_led" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-10.svg",
				"nerd_alert" : "255*255*255 = 16 Million"
			  },
			  {
				"body" : "The tiny lights come in three colours: Red, Green and Blue, or RGB for short. \n\n You’ve probably heard of RGB before, but did you know that by combining these three colours you cancreate 255 x 255 x 255 new colours? That’s over 16-million different combinations! More on colour mixing later...",
				"subtitle" : "Your eBrain has three tiny lights on it, and we’regoing to create some circuits to turn them ON.",
				"title" : "The RGB LED"
			  }
			],
			"type" : "content reference"
		  },
		  "wire_led" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-11.svg",
				"troubleshooting" : "Note that the yellow plug on the far left of the instument panel is NOT a yellow light. This plug connects to the Light Sensor (LS). We’ll learn more about this later"
			  },
			  {
				"list" : [
				  {
					"body" : "Get a male-to-male wire and place end in the 3.3V power source, located on the GPIO bay"
				  },
				  {
					"body" : "Plug the other end into the hole marked R (Red) on the instrument panel. The LED on your board should light up red. Congrats, you’ve just made a circuit!"
				  },
				  {
					"body" : "Next, remove the pin from the R (Red) plug and try the G (Green) and B (Blue) plugs. Sweet, you’ve just made three circuits!"
				  }
				],
				"title" : "Light up Red, Green, and Blue"
			  }
			],
			"type" : "content activity"
		  },
		  "Try making your own light switch" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-12.svg"
			  },
			  {
				"list" : [
				  {
					"body" : "Get a second male-to-male wire. Place one wire in the 3.3V plug on the GPIO bay, and the other one in the R plug on the instrument panel"
				  },
				  {
					"body" : "Now take each wire in your hand and hold the two pins together. What happens? Your LED should light up red!"
				  }
				],
				"title" : "Try making your own light switch"
			  }
			],
			"type" : "content activity"
		  },
		  "breadboard" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-09.svg"
			  },
			  {
				"body" : "You can think of breadboards as a team of helping hands that hold wires together for you. ",
				"fun_fact" : "In electronics breadboards are for making adjustable circuits. In the past tinkerers would wire up radios and other devices using actual wood cutting-boards for bread with nails hammered into them.",
				"title" : "The Breadboard"
			  }
			],
			"type" : "content reference"
		  },
		  "breadboard_how_it_works" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-13.svg"
			  },
			  {
				"body" : "Sure, you can connect wires by holding them together, but luckily there’s much easier way, and that’s to use the breadboard.\n\n The breadboard let’s you clip things together so you don’t have to hold them.\n\n The breadboard on your eBrain has 11 columns. Think of each vertical row being one (electrically conductive) metal clip. ",
				"title" : "How to use the breadboard"
			  }
			],
			"comment" : "Fun fact",
			"type" : "content basics"
		  },
		  "breadboard_how_it_works_II" : {
			"columns" : [
			  {
				"image" : "insidebreadboard.png"
			  },
			  {
				"body" : "Here you can see the metal clips inside the breadboard and how they are arranged in rows or columns. These clips are metal and they hold wires together and transmit electrically because they are conductive!",
				"title" : "Inside The Breadboard"
			  }
			],
			"comment" : "Fun fact",
			"type" : "content basics"
		  },
		  "use_the_breadboard" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-14.svg"
			  },
			  {
				"list" : [
				  {
					"body" : "Instead of using your fngers to hold the two wires together, place them in any two plugs in a vertical row on the breadboard. The red light should come on!"
				  },
				  {
					"body" : "Next, try plugging the wires into different rows. See? They are no longer connected to the same clip, therefore the light won’t turn on"
				  }
				],
				"title" : "Connect two wires using the breadboard"
			  }
			],
			"type" : "content activity"
		  },
		  "Wire RGB Color Mix" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-15.svg"
			  },
			  {
				"list" : [
				  {
					"body" : "Take out four wires from your can. Place a wire in each light plug on the instrument panel and one in the 3.3 V power source."
				  },
				  {
					"body" : "What happens when we wire up multiple colors to a single row on the breadboard at the same time?"
				  }
				],
				"title" : "Mix RGB colors using the breadboard",
				"subtitle" : "Let’s fnd out what happens when you combine Red, Green and Blue in different ways!"
			  }
			],
			"comment_copy" : "Note that the yellow plug on the far left of the instument panelis NOT a yellow light. This plug connects to theLight Sensor (LS). We’ll learn more about this later",
			"type" : "content activity"
		  },
		  "Try the following combinations" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-16.svg"
			  },
			  {
				"list" : [
				  {
					"body" : "Take out four wires from your can. Place a wire in each light plug on the instrument panel and one in the 3.3 V power source."
				  },
				  {
					"body" : "What happens when we wire up multiple colors to a single row on the breadboard at the same time?"
				  }
				],
				"title" : "Try the following combinations",
				"subtitle" : "Let’s fnd out what happens when you combine Red, Green and Blue in different ways!"
			  }
			],
			"type" : "content activity"
		  },
		  "RGB color mixing results" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-17.svg"
			  },
			  {
				"body" : "Red and green make Yellow.\nRed and blue make Magenta.\nGreen and Blue make Cyan.\nRed, Green and Blue make White.",
				"title" : "RGB color mixing results",
				"nerd_alert" : "These colour results might be a little surprising! Mixing lights isn’t like mixing paints! This is a property of physics called additive vs subtractive colour mixing."
			  }
			],
			"type" : "content basics"
		  },
		  "button" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-18.svg"
			  },
			  {
				"body" : "Your eBrain has 4 buttons, each with their own plug in the patch bay.\n\n The buttons are directly connected to the battery, so you don’t need to connect to the 3.3 V plug!",
				"title" : "eBrain’s buttons",
				"subtitle" : "When you press a button you allow electricity to ﬂow in a complete circuit, sending power to whatever is attached!"
			  }
			],
			"type" : "content basics"
		  },
		  "buttons" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-19.svg"
			  },
			  {
				"body" : "Now let’s try hooking up a button so we can turn our light on and off without unplugging any cables.",
				"list" : [
				  {
					"body" : "Use a male-to-male wire to connect R and 1 on the patch bay."
				  },
				  {
					"body" : "Hold down button S1 - The light turns on!"
				  }
				],
				"subtitle" : "The Momentary Switch",
				"title" : "Turn on the LED by using a button"
			  }
			],
			"type" : "content activity"
		  },
		  "challange_one" : {
			"columns" : [
			  {
				"body" : "Using the breadboard, some patch cables, the LED, and the buttons on the eBrain; Build a circuit to control the LED.",
				"message" : "LED is short for Light Emitting Diode... What is a diode?",
				"subtitle" : "Turn on the external LED using the button",
				"title" : "Quick Challenge"
			  },
			  {
				"image" : "svg/materialschapterone.svg"
			  }
			],
			"type" : "content challenge"
		  },
		  "summary_one" : {
			"columns" : [
			  {
				"subtitle" : "You’ve just learned how to use three very essential parts of your eBrain. This is just the foundation.",
				"title" : "Great Job!"
			  },
			  {
				"subtitle" : "Review",
				"list" : [
				  {
					"body" : "Power bay - You plugged in the battery pack and used it’s power via the 3.3 V plug on the GPIO panel."
				  },
				  {
					"body" : "Patch bay - You explored the RGB LED and the buttons on the patch bay."
				  },
				  {
					"body" : "Breadboard - You learned how to use the breadboard and connect various wires together and create new colour combinations!"
				  }
				]
			  }
			],
			"type" : "content challenge"
		  }
		},
		{
		  "chapter_three" : {
			"columns" : [
			  {
				"subtitle" : "Programming With The Robot In A Can",
				"title" : " Chapter 3"
			  }
			],
			"type" : "title chapter_title"
		  },
		  "chaptertwo_materials" : {
			"columns" : [
			  {
				"image" : "svg/materialschapterone.svg"
			  },
			  {
				"subtitle" : "Batteries required",
				"title" : "Materials required for this chapter",
				"body" : "MATERIALS:",
				"list" : [
				  {
					"body" : "4x AA batteries"
				  },
				  {
					"body" : "1x battery pack"
				  },
				  {
					"body" : "1x eBrain"
				  },
				  {
					"body" : "4x Patch Cables"
				  },
				  {
					"body" : "1x LED"
				  }
				],
				"message" : "Keep your workspace clean and organized like a true designer."
			  }
			],
			"comment_copy" : "AA batery info should be a nerd alert",
			"type" : "content"
		  },
		  "connecting" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-29.svg",
				"troubleshooting" : "You will not be connected to the internet, only to the kit."
			  },
			  {
				"body" : "Now let’s try hooking up a button so we can turn our light on and off without unplugging any cables.",
				"list" : [
				  {
					"body" : "Turn your kit on."
				  },
				  {
					"body" : "Click on the WiFi icon on your computer and look for the robot in a can network. Select it to connect to your kit’s wif network."
				  }
				],
				"message" : "Check for the wif ID code that is written on your board to make sure you are connected to the right network",
				"subtitle" : "In order to communicate your programs to the kit, you’ll need to connect to your eBrain",
				"title" : "Connect to your eBrain"
			  }
			],
			"type" : "content reference"
		  },
		  "connecting_snap" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-30.svg"
			  },
			  {
				"body" : "You should have already downloaded the 'Robot in a Can Toolkit' folder from:\n\nhttp://Build.RobotinaCan.com.\n\nIn that folder, locate a sub-folder titled ‘eBrain Snap’. Locate and open Snap.html using Google Chrome.",
				"message" : "Make sure the folder has been unzipped/decompressed before attempting to open Snap!.html",
				"troubleshooting" : "Make sure the connection status is green! (in the top right corner of Snap!). If it's not: try refreshing the page, or closing and reopening the tab.",
				"title" : "Open Snap!"
			  }
			],
			"type" : "content reference"
		  },
		  "how_to_snap" : {
			"columns" : [
			  {
				"image" : "snap.png"
			  },
			  {
				"body" : "Snap is a visual programming tool. It allows you to create programs by dragging blocks of instructions and snapping them together on the scripting area. We’re going to go over some important areas.",
				"troubleshooting" : "Check for the green ‘Connected’ status at the top right if the kit is not properly connected refresh the connection. Make sure you are connected to the WiFi of your Robot In A Can.",
				"title" : "How To Use Snap!"
			  }
			],
			"type" : "content basics"
		  },
		  "how_to_snap_II" : {
			"columns" : [
			  {
				"image" : "snapII.png"
			  },
			  {
				"body" : "1 - Toolbar: Press the green ﬂag to run your program and the red button to stop.\n\n 2 - Palette: This is where you can fnd your command blocks. They are organised by function and color.\n\n3 - Scripting area: Drag blocks from the palette to the scripting area and snap them together to make a list of commands."
			  }
			],
			"type" : "content basics"
		  },
		  "how_to_snap_III" : {
			"columns" : [
			  {
				"image" : "snapIII.png"
			  },
			  {
				"body" : "4 - Stage: The Stage is the area where you can add visual elements to your programs. For example if you were to make a game it would be here in the stage area where you would see and play the game.\n\n5 - Sprite control: Sprites are visual objects on the stage. In this case that means the little triangular arrow on the stage. Imagine you were building a game, each charater would be a sprite. Every coin, enemy, or item would also be other sprites. In the sprite control you can make new sprites and control each sprite you have made. Remember all of the code in the scripting area, as well as the sounds and costumes only apply to the sprite that is currently selected!"
			  }
			],
			"type" : "content basics"
		  },
		  "gpio" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-07.svg"
			  },
			  {
				"body" : "The most important area! Your computer speaks to your board through the electrical connections on GPIO bay. This row of holes is almost like a direct phone line into the computer. \n\nUsing these connections the eBrain computer can talk (out) and listen (in) to other electronics. We will learn to use this more later!",
				"title" : "GPIO: General Purpose Input / Output"
			  }
			],
			"type" : "content reference"
		  },
		  "gpio_II" : {
			"columns" : [
			  {
				"image" : "inputout.png"
			  },
			  {
				"body" : "When we think about input and output we think from the perspective of where the processing is happening in the system. In this case we are looking at the computer as the processor. For example if I am talking and you are listening, from my perspective talking is an output, but from your perspective it is an input.",
				"title" : "GPIO: General Purpose Input / Output"
			  }
			],
			"type" : "content basics"
		  },
		  "blink" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-LED.svg",
				"message" : "Notice we are connected to GPIO pin 4 - and in the code that is the pin we are controlling, but all the GPIO pins work as inputs and outputs!"
			  },
			  {
				"image" : "blink.png",
				"body" : "In this code we have a forever loop that will repeat the instructions that we place inside it. The blocks are color coded and can be found in the 'Palette' that has the matching colors. Here we are using yellow blocks from the control palette, and black blocks from the eBrain palette.",
				"title" : "Blink the LED"
			  }
			],
			"type" : "content activity"
		  },
		  "output" : {
			"columns" : [
			  {
				"image" : "output.png"
			  },
			  {
				"body" : "This is an example of output. As we are thinking from the perspective of the computer (not the LED). \n\nThe Computer is sending a signal out to the light.",
				"title" : "Output"
			  }
			],
			"type" : "content basics"
		  },
		  "button" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-button.svg",
				"message" : "This code is in a forever loop because we need our program to be constantly checking if the button is being pushed. This is called 'Polling'. Notice we are still connected to GPIO pin 4 - GPIO pins work as inputs and outputs!"
			  },
			  {
				"image" : "inputbutton.png",
				"body" : "The read block will read from the GPIO pin 4. When it is active it will be equal to 1, when it is not it will be 0. Here are two ways of doing the same thing.",
				"title" : "Using a Button"
			  }
			],
			"type" : "content reference"
		  },
		  "input" : {
			"columns" : [
			  {
				"image" : "input.png",
				"fun_fact" : "The eBrains logic switches at 3.3V, meaning when it gets 3.3V it counts that as a 1 (High/True/On...etc) other devices might use different switching voltage."
			  },
			  {
				"body" : "This time we are sending 3.3v of electricity into pin number 4. You remeber when we connected the button directly to the LED?\n\n When the button is being pushed it sends 3.3V of electricity out of the patch bay. The GPIO pin listens for voltage, and when it recieves any it knows! ",
				"message" : "What else can you do when the button is being pushed? Experiment with Snap! and see what else you can do!",
				"title" : "Input"
			  }
			],
			"type" : "content basics"
		  },
		  "binary" : {
			"columns" : [
			  {
				"image" : "binary.png",
				"fun_fact" : "This is a square wave. It is also called a binary wave since it is either 1 or 0 and nothing in between, this give it a unique square shape. This kind of wave is used to visualize signals in digital electronics, like computers.",
				"message" : "If I send two ON signals in a row how can the computer decode that as two 1's? Timing plays a key role, the computer's signals are like music and they have a steady beat, this is called a clock speed and it usually is about a billion times per second!"
			  },
			  {
				"image" : "binaryII.png",
				"body" : "Computers only have two words in thier language: 1 and 0. With these two words they can say so many things! This is because they can use different combinations of 1's and 0's to make codes. Computers are electro-mechanical machines that use electricity to represent these 0's and 1's. 0 is OFF and 1 is ON (3.3v).",
				"title" : "The True Language of Computers: Binary"
			  }
			],
			"type" : "content basics"
		  },
		  "challenge_three" : {
			"columns" : [
			  {
				"body" : "The sprite is the little grey arrow on the stage in Snap!. It can be controlled using the blue movment blocks from the palette.",
				"message" : "Use two or more buttons to control the movement of the sprite on the screen!",
				"title" : "Challenge!"
			  }
			],
			"type" : "content activity"
		  }
		},
		{
		  "chapter_four" : {
			"columns" : [
			  {
				"subtitle" : "Prototyping With Robot In A Can",
				"title" : " Chapter 4"
			  }
			],
			"type" : "title chapter_title"
		  },
		  "what_is_a_computer" : {
			"columns" : [
			  {
				"image" : "computersdo.png",
				"fun_fact" : "The information computers handel at the lowest level is always in binary!"
			  },
			  {
				"body" : "Computers are quite complex, but simply put they do 3 things. Take input information, process that information, then produce output.",
				"message" : "What are some examples of input and output that a computer uses?",
				"subtitle" : "Computers are very complex electro-mechanical machines, how can we descibe what they do simply?",
				"title" : "What Does A Computer Do?"
			  }
			],
			"type" : "content basics"
		  },
		  "systems_thinking" : {
			"columns" : [
			  {
				"image" : "inputoutput.png",
				"message" : "Can you map a system for signing up for an email newsletter?"
			  },
			  {
				"body" : "Take the example of an automoblie factory. Simply put, it takes in materials, processes them, and outputs cars.\n\n However if you look into the larger process you will see there is a process just for making the windows, and another for the tires...\n\n It is important to think about this when managing large projects or planning big pieces of code.",
				"subtitle" : "Inside every process you may find a subprocess",
				"title" : "Systems Thinking"
			  }
			],
			"type" : "content basics"
		  },
		  "hacking" : {
			"columns" : [
			  {
				"image" : "hacking.png",
				"message" : "What systems could you hack or add together to re-invent the purpose of the sytem?"
			  },
			  {
				"body" : "In order to hack a system, first you must learn how the system works. What are it's inputs and outputs?\n\nSometimes the fastest way to build a new system or to test an idea is to hack together the inputs and outputs of existing systems.\n\nFor example we could take a smoke detector, a phone dialer, and a phone connection, to build a machine that calls you if there is a fire. ",
				"subtitle" : "Changing systems in creative ways can create new ideas!",
				"title" : "Hacking and Creativity"
			  }
			],
			"type" : "content basics"
		  },
		  "phreaking" : {
			"columns" : [
			  {
				"image" : "phreak.jpg",
				"nerd_alert" : "Sometimes this michiveous behaviour gives hackers a bad reputation, but these tools can be used to reshape society for the better too! Steve Jobs and Steve Wozniack were some of the first phone phreakers!"
			  },
			  {
				"body" : "Around the time computer systems became popular to use, some hackers figured out how the phone systems worked and were able to make devices called 'Blue Boxes' that could make phone calls on pay phones for free.\n\nThey also figured out that they could disconnect peoples calls by using a whistle found as a toy in the popular cereal 'Captin Crunch'.",
				"subtitle" : "The story of the infamous Captin Crunch",
				"title" : "Hackers and Phone Phreaking"
			  }
			],
			"type" : "content basics"
		  },
		  "snap_features" : {
			"columns" : [
			  {
				"image" : "videolight.png",
				"body" : "Here we can use Snap to check the video camera on your computer for motion and react with the LED."
			  },
			  {
				"image" : "svg/eBrain-LED.svg",
				"title" : "Inputs from the Computer"
			  }
			],
			"type" : "content basics"
		  },
		  "input_challenge" : {
			"columns" : [
			  {
				"title" : "Challenge!",
				"body" : "What other ways can you link inputs from the computer with outputs on the eBrain?",
				"message" : "The blue 'Sensing' blocks in snap have blocks for checking some inputs to the computer, you may also find some in other sections, like the 'Control' section."
			  }
			],
			"type" : "content activity"
		  },
		  "analog" : {
			"columns" : [
			  {
				"image" : "a2d.jpg"
			  },
			  {
				"body" : "Not all input is just 1 or 0. The natural world produces signals that are infinitely granular like the music from a guitar, but the computer needs a way of interpreting these signals!\n\nSo it breaks down the waves into steps. The eBrain can break down analog signals down into 1024 steps.",
				"image" : "analog.png",
				"title" : "Analog Input"
			  }
			],
			"type" : "content reference"
		  },
		  "light_sensor" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-lightsensor.svg"
			  },
			  {
				"image" : "graphscript.png",
				"body" : "Try out this graphing script to graph the light input to the light sensor. This sensor is variable resistor and it changes the amount of electricity it let's pass depending on the amount of light on the sensor. Like the pupil in your eye.",
				"title" : "Using the Light Sensor"
			  }
			],
			"type" : "content reference"
		  },
		  "light_sensor_experiment" : {
			"columns" : [
			  {
				"body" : "See if you can make a quick experiment code that reacts to light.",
				"title" : "Challenge! Make Your Code React To Light"
			  }
			],
			"type" : "content activity"
		  },
		  "potentiometer" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-potentiometer.svg"
			  },
			  {
				"image" : "potentiometerscript.png",
				"body" : "Let's wire our first external sensor! This is an external analog sensor, it changes how much electricity flows as you turn the knob. You would find this component in radios.",
				"title" : "Potentiometer"
			  }
			],
			"type" : "content reference"
		  },
		  "scaling_translating" : {
			"columns" : [
			  {
				"image" : "snapstage.png",
				"message" : "The number that come from the potentiometer is between 0 - 1024. By dividing by 2 it is now between 0 - 512, then we subtract 512 to make it a range between -255 to 255. Perfect for the Snap! stage."
			  },
			  {
				"image" : "scaling.png",
				"body" : "The values that come from sensors are not always ready to be used for what we need them for. Sometime you must perform mathematical operations on them to make it work for your code.",
				"title" : "Scaling and Translating Sensor Input"
			  }
			],
			"type" : "content basics"
		  }
		},
		{
		  "chapter_five" : {
			"columns" : [
			  {
				"subtitle" : "Dynamics With Robot In A Can",
				"title" : " Chapter 5"
			  }
			],
			"type" : "title chapter_title"
		  },
		  "what_is_a_computer" : {
			"columns" : [
			  {
				"image" : "computersdo.png",
				"fun_fact" : "The information computers handel at the lowest level is always in binary!"
			  },
			  {
				"body" : "Computers are quite complex, but simply put they do 3 things. Take input information, process that information, then produce output.",
				"message" : "What are some examples of input and output that a computer uses?",
				"subtitle" : "Computers are very complex electro-mechanical machines, how can we descibe what they do simply?",
				"title" : "What Does A Computer Do?"
			  }
			],
			"type" : "content basics"
		  },
		  "systems_thinking" : {
			"columns" : [
			  {
				"image" : "inputoutput.png",
				"message" : "Can you map a system for signing up for an email newsletter?"
			  },
			  {
				"body" : "Take the example of an automoblie factory. Simply put, it takes in materials, processes them, and outputs cars.\n\n However if you look into the larger process you will see there is a process just for making the windows, and another for the tires...\n\n It is important to think about this when managing large projects or planning big pieces of code.",
				"subtitle" : "Inside every process you may find a subprocess",
				"title" : "Systems Thinking"
			  }
			],
			"type" : "content basics"
		  },
		  "hacking" : {
			"columns" : [
			  {
				"image" : "hacking.png",
				"message" : "What systems could you hack or add together to re-invent the purpose of the sytem?"
			  },
			  {
				"body" : "In order to hack a system, first you must learn how the system works. What are it's inputs and outputs?\n\nSometimes the fastest way to build a new system or to test an idea is to hack together the inputs and outputs of existing systems.\n\nFor example we could take a smoke detector, a phone dialer, and a phone connection, to build a machine that calls you if there is a fire. ",
				"subtitle" : "Changing systems in creative ways can create new ideas!",
				"title" : "Hacking and Creativity"
			  }
			],
			"type" : "content basics"
		  },
		  "phreaking" : {
			"columns" : [
			  {
				"image" : "phreak.jpg",
				"nerd_alert" : "Sometimes this michiveous behaviour gives hackers a bad reputation, but these tools can be used to reshape society for the better too! Steve Jobs and Steve Wozniack were some of the first phone phreakers!"
			  },
			  {
				"body" : "Around the time computer systems became popular to use, some hackers figured out how the phone systems worked and were able to make devices called 'Blue Boxes' that could make phone calls on pay phones for free.\n\nThey also figured out that they could disconnect peoples calls by using a whistle found as a toy in the popular cereal 'Captin Crunch'.",
				"subtitle" : "The story of the infamous Captin Crunch",
				"title" : "Hackers and Phone Phreaking"
			  }
			],
			"type" : "content basics"
		  },
		  "snap_features" : {
			"columns" : [
			  {
				"image" : "videolight.png",
				"body" : "Here we can use Snap to check the video camera on your computer for motion and react with the LED."
			  },
			  {
				"image" : "svg/eBrain-LED.svg",
				"title" : "Inputs from the Computer"
			  }
			],
			"type" : "content basics"
		  },
		  "input_challenge" : {
			"columns" : [
			  {
				"title" : "Challenge!",
				"body" : "What other ways can you link inputs from the computer with outputs on the eBrain?",
				"message" : "The blue 'Sensing' blocks in snap have blocks for checking some inputs to the computer, you may also find some in other sections, like the 'Control' section."
			  }
			],
			"type" : "content activity"
		  },
		  "analog" : {
			"columns" : [
			  {
				"image" : "a2d.jpg"
			  },
			  {
				"body" : "Not all input is just 1 or 0. The natural world produces signals that are infinitely granular like the music from a guitar, but the computer needs a way of interpreting these signals!\n\nSo it breaks down the waves into steps. The eBrain can break down analog signals down into 1024 steps.",
				"image" : "analog.png",
				"title" : "Analog Input"
			  }
			],
			"type" : "content reference"
		  },
		  "light_sensor" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-lightsensor.svg"
			  },
			  {
				"image" : "graphscript.png",
				"body" : "Try out this graphing script to graph the light input to the light sensor. This sensor is variable resistor and it changes the amount of electricity it let's pass depending on the amount of light on the sensor. Like the pupil in your eye.",
				"title" : "Using the Light Sensor"
			  }
			],
			"type" : "content reference"
		  },
		  "light_sensor_experiment" : {
			"columns" : [
			  {
				"body" : "See if you can make a quick experiment code that reacts to light.",
				"title" : "Challenge! Make Your Code React To Light"
			  }
			],
			"type" : "content activity"
		  },
		  "potentiometer" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-potentiometer.svg"
			  },
			  {
				"image" : "potentiometerscript.png",
				"body" : "Let's wire our first external sensor! This is an external analog sensor, it changes how much electricity flows as you turn the knob. You would find this component in radios.",
				"title" : "Potentiometer"
			  }
			],
			"type" : "content reference"
		  },
		  "scaling_translating" : {
			"columns" : [
			  {
				"image" : "snapstage.png",
				"message" : "The number that come from the potentiometer is between 0 - 1024. By dividing by 2 it is now between 0 - 512, then we subtract 512 to make it a range between -255 to 255. Perfect for the Snap! stage."
			  },
			  {
				"image" : "scaling.png",
				"body" : "The values that come from sensors are not always ready to be used for what we need them for. Sometime you must perform mathematical operations on them to make it work for your code.",
				"title" : "Scaling and Translating Sensor Input"
			  }
			],
			"type" : "content basics"
		  }
		},
		{
		  "chapter_6" : {
			"columns" : [
			  {
				"subtitle" : "Sensor Dictionary",
				"title" : " Chapter 4"
			  }
			],
			"type" : "title chapter_title"
		  },
		  "sensor_prox" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-lineSensor.svg"
			  },
			  {
				"image" : "",
				"body" : "This sensor bounces infrared light off of objects and checks the level of reflection. Black object will reflect less light than a white object, so this sensor can also be used to make robots follow lines. You can use this sensor in analog or digital modes.",
				"troubleshooting" : "You may need to adjust the sensitivity of the sensor using the blue potentiometer on the chip.",
				"title" : "Line/Proximity Sensor"
			  }
			],
			"type" : "content reference"
		  },
		  "sensor_flame" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-flameSensor.svg"
			  },
			  {
				"image" : "",
				"body" : "This sensor detects the infrared light produced by a flame. When it sees a flame it will output a signal. You can use this signal in analog or digital modes.",
				"title" : "Infrared Flame Sensor"
			  }
			],
			"type" : "content reference"
		  },
		  "sensor_mic" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-microphone.svg"
			  },
			  {
				"image" : "",
				"body" : "This sensor is a microphone. It can detect the level of sound in it's environment and make your programs react to sound.",
				"message" : "you can also use the microphone inside your computer for a similar effect.",
				"title" : "Sound Sensor"
			  }
			],
			"type" : "content reference"
		  },
		  "sensor_buzzer" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-buzzer.svg"
			  },
			  {
				"image" : "",
				"body" : "Wire this actuator to pin number 5 to make a buzzing alarm sound.",
				"message" : "This buzzer can buzz 88 different notes just like a piano (pick a tone between 1 and 88).",
				"title" : "Piezo Buzzer"
			  }
			],
			"type" : "content reference"
		  },
		  "sensor_fsr" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-FSR.svg"
			  },
			  {
				"image" : "",
				"body" : "This is a force sensitive resistor. It can be used to measure force, like the strength of a punch or the force of a ball hitting an objecct. It can also be used to sense weight.",
				"title" : "Force Sensor"
			  }
			],
			"type" : "content reference"
		  },
		  "sensor_LED" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-externalLED.svg"
			  },
			  {
				"image" : "",
				"body" : "This is how to wire and external LED to the breadboard.",
				"title" : "External LED"
			  }
			],
			"type" : "content reference"
		  },
		  "sensor_voltage" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-PotatoVoltage.svg"
			  },
			  {
				"image" : "",
				"body" : "This circuit can be used to measure voltages from external sources of power. Ideally the external power should not exceed 3.3V. You could use this to measure the power produced by a potato battery or AA battery. Make your own simple voltmeter!",
				"title" : "Measuring Voltage With The Analog Read"
			  }
			],
			"type" : "content reference"
		  },
		  "relay" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-PotatoVoltage.svg"
			  },
			  {
				"image" : "",
				"body" : "This circuit can be used to measure voltages from external sources of power. Ideally the external power should not exceed 3.3V. You could use this to measure the power produced by a potato battery or AA battery. Make your own simple voltmeter!",
				"title" : "220V Relay (3.3V switch)"
			  }
			],
			"type" : "content reference"
		  },
		  "peizo_vibration_sensor" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-PotatoVoltage.svg"
			  },
			  {
				"image" : "",
				"body" : "This circuit can be used to measure voltages from external sources of power. Ideally the external power should not exceed 3.3V. You could use this to measure the power produced by a potato battery or AA battery. Make your own simple voltmeter!",
				"title" : "Peizo Vibration Sensor"
			  }
			],
			"type" : "content reference"
		  },
		  "dht_11" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-PotatoVoltage.svg"
			  },
			  {
				"image" : "",
				"body" : "This circuit can be used to measure voltages from external sources of power. Ideally the external power should not exceed 3.3V. You could use this to measure the power produced by a potato battery or AA battery. Make your own simple voltmeter!",
				"title" : "Temperature and Humidity Sensor DHT 11"
			  }
			],
			"type" : "content reference"
		  },
		  "soil_humidity" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-PotatoVoltage.svg"
			  },
			  {
				"image" : "",
				"body" : "This circuit can be used to measure voltages from external sources of power. Ideally the external power should not exceed 3.3V. You could use this to measure the power produced by a potato battery or AA battery. Make your own simple voltmeter!",
				"title" : "Soil Humidity Sensor"
			  }
			],
			"type" : "content reference"
		  },
		  "Distance_sensor" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-PotatoVoltage.svg"
			  },
			  {
				"image" : "",
				"body" : "This circuit can be used to measure voltages from external sources of power. Ideally the external power should not exceed 3.3V. You could use this to measure the power produced by a potato battery or AA battery. Make your own simple voltmeter!",
				"title" : "Ultrasonic Distance Sensor"
			  }
			],
			"type" : "content reference"
		  },
		  "water_pump" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-PotatoVoltage.svg"
			  },
			  {
				"image" : "",
				"body" : "This circuit can be used to measure voltages from external sources of power. Ideally the external power should not exceed 3.3V. You could use this to measure the power produced by a potato battery or AA battery. Make your own simple voltmeter!",
				"title" : "Water Pump"
			  }
			],
			"type" : "content reference"
		  },
		  "Temperature_sensor" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-PotatoVoltage.svg"
			  },
			  {
				"image" : "",
				"body" : "This circuit can be used to measure voltages from external sources of power. Ideally the external power should not exceed 3.3V. You could use this to measure the power produced by a potato battery or AA battery. Make your own simple voltmeter!",
				"title" : "Waterproof Temperature Sensor"
			  }
			],
			"type" : "content reference"
		  },
		  "analog_touch" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-PotatoVoltage.svg"
			  },
			  {
				"image" : "",
				"body" : "This circuit can be used to measure voltages from external sources of power. Ideally the external power should not exceed 3.3V. You could use this to measure the power produced by a potato battery or AA battery. Make your own simple voltmeter!",
				"title" : "Analog Touch Sensor"
			  }
			],
			"type" : "content reference"
		  },
		  "dht_11" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-PotatoVoltage.svg"
			  },
			  {
				"image" : "",
				"body" : "This circuit can be used to measure voltages from external sources of power. Ideally the external power should not exceed 3.3V. You could use this to measure the power produced by a potato battery or AA battery. Make your own simple voltmeter!",
				"title" : "Magnetic Field Sensor (Hall Sensor)"
			  }
			],
			"type" : "content reference"
		  },
		  "pir_motion" : {
			"columns" : [
			  {
				"image" : "svg/eBrain-PotatoVoltage.svg"
			  },
			  {
				"image" : "",
				"body" : "This circuit can be used to measure voltages from external sources of power. Ideally the external power should not exceed 3.3V. You could use this to measure the power produced by a potato battery or AA battery. Make your own simple voltmeter!",
				"title" : "Passive Infrared Motion Sensor"
			  }
			],
			"type" : "content reference"
		  }
		}
	  ]
	}
  }